import { motion, useAnimation, useInView } from "framer-motion";
import { useEffect, useRef } from "react";

interface PathDrawingProps {
  darkMode: boolean;
  country: string;
}


const countryPaths: Record<string, string[]> = {
  japan: [
    // existing Japan path(s)
    "M77.972,205.527l3.567,4.927l-6.62,7.338l-10.572-0.462l-5.414,2.72l-4.773,8.442l-5.517-1.155l-2.078-1.719l-1.129-8.827 l4.927-4.208l1.822-5.029l5.671,1.642l6.928-1.18l0.975-2.899l8.031-3.13L77.972,205.527z M231.618,32.893l1.257-8.365l-4.644,5.055 h-5.979l-2.284-2.746l-7.082-1.052l-9.391-7.133L189.948,2l-4.773,6.363l2.617,7.287l-1.745,15.164l-4.003,4.131l1.411,6.415 l-2.822,3.823l-5.594-0.693l-7.415,7.852l-5.209,1.719l-1.309,7.595l4.798,4.901l-2.284,7.698l3.053,2.951l6.004-7.544l1.001-5.825 l-5.722-2.335l1.232-4.465l4.798-1.078l3.823,4.542l9.571-5.542l20.604,12.188l1.488-7.133l3.746-6.363l8.981-6.569l9.109-0.103 l4.567-6.004L231.618,32.893z M187.1,94.603l-3.438-4.003l-0.821-12.83l-6.543-2.335l-1.95,6.492l6.492-1.693l-0.693,5.979 l-12.701,1.77l-5.183,3.053l0.565,3.9l1.283,16.935l-2.463,7.082l-4.901,10.366l-1.796,6.825l-8.442,6.081l-4.234,7.672 l-4.978,3.875l-9.366,3.515l-4.285,3.721l-4.105-3.695l1.206-5.953l-5.209-1.591l-0.231,8.929l-8.365,10.341l-4.285,5.517 l0.026,6.286l-7.595,1.18l-3.515-4.413l-5.568,1.77l-7.492,0.565l-15.703,1.334l-0.975-1.386l-9.468,1.001l-3.849,4.567 l-11.906,8.237l-4.388,4.182l-5.157-0.513l-3.823,5.388l5.927,4.054l8.621-0.949l3.951,3.105l2.669-5.645l4.978,0.385l13.728-4.105 l8.288-0.411l5.081-2.977l6.723-0.616l4.388,2.848l5.619-0.898l-5.363,6.902l-0.744,7.569l10.315,7.954l3.669-3.567l3.772-6.8 l10.879-6.261l-5.799-4.747l3.772-6.184l2.284,4.696l8.262,2.232l11.316-0.411l5.26-6.877l2.72,6.774l6.03-2.463l-0.616-4.516 l6.851-3.002l3.618-4.054l1.206-2.181l-0.231,11.803l8.083-3.772l1.36-6.748l5.619-3.079l-4.157-7.775l3.284-12.522l2.386-2.181 l1.206-7.518l-1.591-9.366l2.386-8.801l3.387-0.693l4.336-10.238l2.951-1.026l3.053-9.519l-1.796-8.313L187.1,94.603z M35.609,213.815l-8.083-1.36l-3.9-5.542h-6.569l-2.001,4.465l-5.748,2.13l-3.669,1.95l-3.515,6.184l3.438,6.261l5.363-4.67 l2.617-3.413l0.924,3.079l2.258,3.284l-1.206,7.108l-3.875,4.542l-3.413,6.569l2.309,3.284l-2.489,6.8L18.905,258l4.182-6.261 l2.617,1.77l7.441-20.579l3.284-3.336l2.669-3.336l-4.285-6.774L35.609,213.815z"
  ],
  france: [
    // example France path(s)
    "M231.992,197.322 L230.32,181.434 L222.2,172.344 L231.777,167.866 L224.574,151.843 L228.863,148.714 L221.526,134.715 L208.767,135.551 L228.513,103.451 L237.01,100.106 L235.769,85.378 L239.329,70.03 L235.337,58.08 L219.611,54.033 L212.84,47.857 L167.874,33.911 L165.608,23.417 L140.86,8.812 L137.69,2 L120.426,8.285 L120.561,22.69 L116.326,31.537 L94.827,41.86 L94.727,46.48 L84.882,50.661 L69.751,46.606 L66.244,38.244 L54.069,39.387 L60.381,59.834 L58.978,71.027 L37.291,72.16 L27.483,62.963 L2.008,67.468 L3.517,86.931 L40.177,104.477 L48.728,116.561 L45.869,123.143 L51.614,132.637 L65.048,138.868 L54.042,217.472 L57.576,233.117 L90.337,247.606 L99.305,245.161 L129.139,258 L149.639,249.059 L149.262,237.811 L168.089,220.467 L197.789,225.322 L210.844,232.416 L226.328,227.857 L245.992,201.017 Z"  ],
  italy: [
    // example Italy path(s)
    "M174.276,218.293l-13.415,2.241l-14.306,4.967l-9.421,1.646l-12.335-4.724l-2.349,3.806l-5.101-1.862l-5.642,8.233	l4.886,5.992l4.724-0.378l20.757,10.986l2.915-0.486l6.155,2.538l3.401,5.074L165.126,258l6.235-8.26l-5.425-8.476l2.618-11.58	L174.276,218.293z M53.295,150.838l-5.912-4.291l-8.017,8.151l-13.064,5.264l4.912,8.071l0.783,32.715l3.293,4.13l4.778,1.971	l4.454-8.449l9.42,1.808l1.674-10.365l1.566-13.55l-2.052-3.536l2.268-11.04L53.295,150.838z M216.547,153.106l-40.894-16.736	l3.509-8.88l-3.482-3.617l-16.654,1.619l-19.678-13.955l-10.77-23.322l-24.024-17.95l-2.51-10.069l2.078-4.237l-1.7-9.34	l21.702-16.843l0.054-0.513l-4.616-12.012l5.021-6.073L103.42,8.262l-5.965-5.911L80.341,2l-2.645,4.805l-9.474-2.214l0.108,8.044	l-4.562-1.943l-5.048,6.505l-14.468,6.505l-2.888,7.342l-8.449-10.743l-10.257,7.801l-5.426-1.215L4.06,30.558l5.101,14.496	l-7.018,8.205l5.453,5.615l-3.59,4.076l3.185,7.801l11.85,4.076l0.027,7.585l8.017-3.671l9.177-11.094l10.905,0.728l18.922,13.416	l0.675,5.992l7.538,17.873l45.908,40l13.334-0.945l5.507,7.342l9.366,7.369l5.318-1.673l5.237,6.748l-1.431,4.049l8.8,5.425	l5.83-1.511l13.55,30.448l-7.018,4.372l1.674,3.806l-5.021,10.906l3.05,4.021l6.56-1.106l1.187-5.021l7.423-8.854l-1.241-6.451	l6.559-5.803l4.265,0.405l-0.081-12.957l-11.718-7.866l7.021-20.126l9.475,4.616l4.912-0.216l6.937,9.07l6.101,2.321l2.051-8.368	L216.547,153.106z"  
  ],
};


const draw = {
  hidden: {
    pathLength: 0,
    opacity: 0,
    fill: "rgba(0, 0, 0, 0)" // transparent fill initially
  },
  visible: (i: number) => {
    const delay = i * 0.9;
    return {
      pathLength: 1,
      opacity: 1,
      fill: "rgba(0, 0, 0, 1)", // fully colored after
      transition: {
        pathLength: { delay, type: "spring", duration: 6.5, bounce: 0 },
        opacity: { delay, duration: 0.01 },
        fill: { delay: delay + 1.5, duration: 1 } // start filling after drawing
      }
    };
  }
};

export default function PathDrawing({ darkMode, country }: PathDrawingProps) {
  const ref = useRef(null);
  const isInView = useInView(ref, { once: true, margin: "0px 0px -100px 0px" });
  const controls = useAnimation();

  useEffect(() => {
    if (isInView) {
      controls.start("visible");
    }
  }, [isInView, controls]);
return (
  <motion.svg
    ref={ref}
    viewBox="0 0 238 260"   // Defines internal coordinates
    initial="hidden"
    animate={controls}
    style={{
      width: "80vw",         // Fill container width
      height: "75vh",        // Maintain aspect ratio
    }}
  >
    {countryPaths[country]?.map((d, i) => (
      <motion.path
        key={i}
        d={d}
        stroke={darkMode ? "#ffffff" : "#000000"}
        variants={draw}
        custom={i + 1}
        style={{
          strokeWidth: 1,
          strokeLinecap: "round",
          fill: "transparent",
        }}
      />
    ))}
  </motion.svg>
);
}
